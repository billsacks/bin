#!/bin/bash

# Bill Sacks
# 2-28-10

# Creates a file containing a summary of the differences and relative
# differences between all *.nc files (or *here_extension.nc files) in
# this directory, and all corresponding *.nc (or *there_extension.nc
# files) in the directory given by <path>. Also creates a summary of the
# summary file, containing mins & maxes of the relative difference
# columns, and outputs this to the screen.

# The main output file contains the following for each level of each variable:
#  - File, name & level of variable
#  - Summary of differences: min, max, average & average absolute value
#  - Average absolute value in the files in <path>
#    - This is the "Avg_Magnitude" column; it gives the average
#      magnitude of the variables themselves (not the differences).
#      Conceptually, we are treating the files in <path> as the control
#      run, and determine relative differences from this control run.
#  - Average absolute value in the files here
#    - This is the "Expt_Avg_Magnitude" column (conceptually, we treat
#      the files here as the "experimental" run)
#  - Relative differences: min, max, average & average absolute value
#    - These are calculated by dividing the min, max, average &
#      average_abs of the differences by the Avg_Magnitude (i.e., the
#      average magnitude of the variables in <path>, which we treat as
#      the control run)
#    - Note that this is different from dividing each grid cell's
#      difference by that grid cell's magnitude; here, the denominator
#      is the average magnitude, averaged across space
#
# The handling of time is determined by the variables
# time_index_master and summarize_all_times in quick_look.ncl. The
# default as of 3-24-10 is summarize_all_times=True. This means that
# the summary is taken across all time steps of each variable.

# This script uses ncreldiffs.awk, mins_and_maxes, ncbo_all and
# quick_look.ncl. The paths of these are given below, in the section,
# "Set some parameters here". Note that ncbo_all also requires ncbo to
# be installed, and quick_look.ncl requires ncl.

# For information on the usage (i.e., command-line arguments), see the
# "Usage" function below.

# ----------------------------------------------------------------------
# Set some parameters here
# The values here can be over-ridden by setting environment variables before calling this script
#  - e.g.: export ncreldiffs_awk_path=/path/to/ncreldiffs.awk
# ----------------------------------------------------------------------

# Full path of the ncreldiffs.awk script:
# (the following assumes that (1) ncreldiffs is in your path, and (2) ncreldiffs.awk is in the same directory as ncreldiffs;
#  if these are not true, set the ncreldiffs_awk_path variable manually)
if [ -z "$ncreldiffs_awk_path" ]; then
    ncreldiffs_path=`which ncreldiffs`
    ncreldiffs_dir=`dirname $ncreldiffs_path`
    export ncreldiffs_awk_path=${ncreldiffs_dir}/ncreldiffs.awk
fi

# Full path of the mins_and_maxes script:
# (the following works if mins_and_maxes is in your path; if not, set the mins_and_maxes variable manually)
if [ -z "$mins_and_maxes_path" ]; then
    export mins_and_maxes_path=`which mins_and_maxes`
fi

# Full path of the ncbo_all script:
# (the following works if ncbo_all is in your path; if not, set the ncbo_all variable manually)
if [ -z "$ncbo_all_path" ]; then
    export ncbo_all_path=`which ncbo_all`
fi

# Full path of the quick_look.ncl script:
if [ -z "$quick_look_path" ]; then
    export quick_look_path=$HOME/ncl/quick_look.ncl
fi

# Some characteristics of the quick_look summary output files:
# first column containing real data, as opposed to the name, level, etc.:
if [ -z "$ql_first_data_col" ]; then
    export ql_first_data_col=4
fi
# column containing the variable name:
if [ -z "$ql_name_col" ]; then
    export ql_name_col=2
fi
# column containing the level:
if [ -z "$ql_level_col" ]; then
    export ql_level_col=3
fi
# column containing the average abs. value:
if [ -z "$ql_avg_abs_col" ]; then
    export ql_avg_abs_col=7
fi

# ----------------------------------------------------------------------
# Done setting parameters
# ----------------------------------------------------------------------

function Usage {
    echo "Usage: $0 output_file path"
    echo "output_file: name of the file which will contain final summary output"
    echo "  A summary of the summary file is placed in <output_file>.summary, as well as printed to the screen"
    echo "path: the path containing the *.nc files to diff with"
    echo ""
    echo "The following are optional arguments:"
    echo "[-h here_extension]: only consider files in this directory that are of the form '*here_extension.nc'; in looking for corresponding files in <path>, ignore 'here_extension'"
    echo "[-t there_extension]: only consider files in <path> that are of the form '*there_extension.nc'; ignore this extension in determining corresponding files here"
    echo ""
    echo "Creates a file containing a summary of the differences and relative"
    echo "differences between all *.nc files (or *here_extension.nc files) in"
    echo "this directory, and all corresponding *.nc (or *there_extension.nc"
    echo "files) in the directory given by <path>. Also creates a summary of the"
    echo "summary file, containing mins & maxes of the relative difference"
    echo "columns, and outputs this to the screen."
}

#define default values:
here_extension=""
there_extension=""

# handle command-line arguments:
while getopts h:t: opt
do
    case $opt in
	h) here_extension=$OPTARG;;
	t) there_extension=$OPTARG;;
	\?) Usage
    esac
done

# shift off the arguments we read with getopts:
shift `expr $OPTIND - 1`

if [[ $# -ne 2 ]]; then
    Usage
    exit 1
fi

output_file=$1
there_path=$2

# echo "output_file: <$output_file>"
# echo "there_path: <$there_path>"
# echo "here_extension: <$here_extension>"
# echo "there_extension: <$there_extension>"

if [[ ! -d $there_path ]]; then
    echo "ERROR: $there_path not a directory; halting"
    echo ""
    Usage
    exit 1
fi

# Perform quick_look on the files in <path> to get the average magnitudes of each variable in the "control" run:
#
# We build up a list of the files of interest in path. This is slightly
# difficult because there may be some extraneous files there that aren't
# included in the ncbo_all. Thus, we have to build up this list using
# code similar to that in the loop in ncbo_all (WARNING: DUPLICATED CODE
# HERE!). That is, we look at all the files of interest in the current
# directory, then modify the file name to find the corresponding file in
# <path>.
ql_magnitude_file="ql_magnitudes.$$"
there_files=""
for file in *$here_extension.nc
do
    file_base=`echo $file | sed "s/$here_extension\.nc//"`  # trim 'here_extension.nc off the end"
    file_there=$file_base$there_extension.nc
    if [ -f $there_path/$file_there ]; then   # make sure file exists in the other directory
	# Add that file to the list of files to process:
	there_files="$there_files $there_path/$file_there"
    else
	echo "$file_there doesn't exist in $there_path"
    fi
done
export there_files
echo "Getting average magnitudes in control files: Running quick_look on:"
echo $there_files
# Note that pattern will literally be "$there_files" (unexpanded) in
# quick_look.ncl. The variable will be expanded when the ncl script
# calls systemfunc("ls ...")
ncl $quick_look_path 'pattern="$there_files"' output_file=\"$ql_magnitude_file\" 

# Perform quick_look on the files here to get the average magnitudes of each variable in the "experimental" run:
ql_expt_magnitude_file="ql_expt_magnitudes.$$"
echo "Getting average magnitudes in experimental files: Running quick_look on:"
ls *${here_extension}.nc
ncl $quick_look_path pattern=\"*${here_extension}.nc\" output_file=\"$ql_expt_magnitude_file\"

# Perform ncbo_all on the files to get the differences between the two runs for each variable:
ql_diff_file="ql_diffs.$$"
$ncbo_all_path -h "$here_extension" -t "$there_extension" -q "$ql_diff_file" $there_path

# Make sure that the three quick_look output files contain the same variables:
# (Make sure the variable names & levels match up for all lines)
awk "{print \$$ql_name_col,\$$ql_level_col}" ${ql_magnitude_file}.txt > ${ql_magnitude_file}.vars.txt
awk "{print \$$ql_name_col,\$$ql_level_col}" ${ql_expt_magnitude_file}.txt > ${ql_expt_magnitude_file}.vars.txt
awk "{print \$$ql_name_col,\$$ql_level_col}" ${ql_diff_file}.txt > ${ql_diff_file}.vars.txt
# Check ql_magnitude_file vs. ql_expt_magnitude_file:
diffs=`diff ${ql_magnitude_file}.vars.txt ${ql_expt_magnitude_file}.vars.txt`
if [[ $diffs != '' ]]; then
    echo "ERROR: Differences found in variables included in quick_look output for control magnitudes and experimental magnitudes"
    exit 1
fi
# Check ql_magnitude_file vs. ql_diff_file:
diffs=`diff ${ql_magnitude_file}.vars.txt ${ql_diff_file}.vars.txt`
if [[ $diffs != '' ]]; then
    echo "ERROR: Differences found in variables included in quick_look output for magnitudes and differences"
    exit 1
fi
rm ${ql_magnitude_file}.vars.txt
rm ${ql_expt_magnitude_file}.vars.txt
rm ${ql_diff_file}.vars.txt

# Make the full summary file, containing differences, average magnitude, and relative differences:
awk -f $ncreldiffs_awk_path -v first_data_col=$ql_first_data_col -v magfile=${ql_magnitude_file}.txt -v expt_magfile=${ql_expt_magnitude_file}.txt -v abscol=$ql_avg_abs_col ${ql_diff_file}.txt > $output_file

# Make the summary of the summary file, and print it to the screen:
$mins_and_maxes_path -v first_col=$ql_first_data_col -v ignore_re='^NA$' $output_file > ${output_file}.summary
cat ${output_file}.summary

# Remove intermediate files (but note that we do not remove the *_sbt.nc files created by ncbo_all):
rm ${ql_magnitude_file}.txt ${ql_expt_magnitude_file}.txt ${ql_diff_file}.txt