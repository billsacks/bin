#!/bin/bash

# Bill Sacks
# 4-7-08

# Transform the longitude of a file from -180..180 to 0..360
# In the final output file, longitude will be the last dimension
# Command-line arguments:
#  $1: input file name
#  $2: output file name
# Optional arguments:
#  - lon_name
#  - all_dims
# Other user-customizable constants:
#  - last_west

# Note: ncrcat sometimes fails due to the units of the longitude
# variable (sometimes with a segmentation fault, sometimes with
# another error). If this is happening, try setting the units to " "
# then rerunning.

# Requires:
# - netCDF operators (NCO)
# - ncmkrec (A script written by Bill)

# ----------------------------------------------------------------------
# LOCAL FUNCTIONS DEFINED HERE
# ----------------------------------------------------------------------

function Usage {
    progname=`basename $0`
    echo "Usage: $progname [-a all_dims] [-h] [-l lon_name] input_file output_file"
    echo ""
    echo "This script transforms the longitudes of a file from -180..180"
    echo "to 0..360"
    echo ""
    echo "The following are optional arguments:"
    echo "[-a all_dims]: comma-separated list of all dimensions, in desired order of output file"
    echo "(defaults to '$all_dims')"
    echo ""
    echo "[-h]: print this help message and exit"
    echo ""
    echo "[-l]: name of longitude in file"
    echo "(defaults to '$lon_name')"
    echo ""
}

# ----------------------------------------------------------------------
# BEGIN MAIN SCRIPT
# ----------------------------------------------------------------------

# ----------------------------------------------------------------------
# Define constants and default values for optional parameters
# ----------------------------------------------------------------------

lon_name="lon"
all_dims="lat,lon"  # comma-separated list of all dimensions, in desired order of output file

# farthest-east longitude included in 'west' file
# note that any point with a longitude between $last_west and 0 will be discarded!
# (it's okay for last_west to be closer to 0 than it needs to be)
last_west="-0.000001"

# ----------------------------------------------------------------------
# Handle command-line arguments
# ----------------------------------------------------------------------

while getopts a:hl: opt; do
    case $opt in
	a) all_dims=$OPTARG;;
	h) Usage; exit;;
	l) lon_name=$OPTARG;;
	\?) Usage; exit 1
    esac
done

# shift off the arguments we read with getopts:
shift `expr $OPTIND - 1`

if [[ $# -ne 2 ]]; then
    Usage
    exit 1
fi

in_fname=$1
out_fname=$2

# ----------------------------------------------------------------------
# Do the work
# ----------------------------------------------------------------------

east_fname="${out_fname}_east.$$"
west_fname="${out_fname}_west.$$"

# Separate eastern and western halves of the file:
ncks -d $lon_name,0.,180. $in_fname $east_fname
ncks -d $lon_name,-180.,$last_west $in_fname $west_fname

# Change western longitudes from -180..0 to 180..360:
ncap2 -O -s "$lon_name = $lon_name + 360" $west_fname $west_fname

# Turn longitude into record dimension
ncmkrec $lon_name $east_fname $east_fname
ncmkrec $lon_name $west_fname $west_fname

# Paste files back together:
ncrcat $east_fname $west_fname $out_fname
rm $east_fname
rm $west_fname

# Reorder dimensions
ncpdq -O -a "$all_dims" $out_fname $out_fname

# Make longitude no longer the record dimension
ncecat -O $out_fname $out_fname
ncwa -O -a record $out_fname $out_fname