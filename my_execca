#!/bin/bash

args="$*"
argc=$#
exe=$1
cmd=$(basename $(echo $0))

if [ $(echo $cmd|cut -c5-6) = "ca" ] ; then
   queue=caldera
else
   queue=geyser
fi
   
#-- Find the appropriate project
#
if [ -z "$DAV_PROJECT" ] ; then

   PROJFILE=/ncar/opt/lsf/conf/lsbatch/yellowstone/configdir/project.ncar
   INACT=/ncar/opt/lsf/conf/lsbatch/yellowstone/configdir/inactproj
   PROJS=$(eval "awk -F: '\$1 ~ /^$USER\$/{print \$2}' $PROJFILE" | awk -F, '{for(i=1;i<=NF;i++)print $i}')
   for PROJ in $PROJS; do
      inact=$(grep $PROJ $INACT|grep Geyser_Caldera|wc -l)
      if [ $inact -eq 0 ] ; then
         break;
      fi
   done

else
   PROJ=$DAV_PROJECT
fi

if [ $argc -eq 0 ] ; then

   args=$(eval "awk -F: '\$1 ~ /^$USER\$/{print \$7}' /etc/passwd")

elif [[ $argc -eq 1 && $1 =~ ^[-h] ]] ; then

   cat << EOF0

   The wrapper script $cmd submits a batch interactive job in $queue. It just starts
   your login shell when submitted without any arguments. Otherwise it will execute
   the command that follows $cmd. 

   You may invoke ncl, idl, R, matlab, mathematica etc. by prefixing $cmd in login
   nodes. Just make sure to invoke the needed module before invoking. Alternatively,
   you may invoke $cmd without arguments, get a shell prompt and then invoke your
   needed utility by loading the needed modules.

   By default,
   
   1. it will use the project $PROJ. You may override this by setting the 
      environment DAV_PROJECT prior to invoking $cmd.

   2. it will request 1 core. You may override this by setting the environment
      DAV_CORES to appropriate number of cores. For example, if you are planning 
      to submit compilation with 8 threads (say make -j 8) then we recommend setting
      DAV_CORES=8 to help our batch scheduler LSF better balance the anticipated load.

EOF0
   exit

fi


#-- Find the exec is in path --
#
isinpath=$(which $0 1>/dev/null)
if [ $? -ne 0 ] ; then
   exit -1
fi


#-- Find the appropriate number of cores
#
if [ -z "$DAV_CORES" ] ; then
   NCORES=1
else
   NCORES=$DAV_CORES
fi

cat << EOF
 
  Requesting $NCORES core(s) to $queue queue, 
  to submit $args the usage is to be charged into $PROJ 
  please wait..

EOF
bsub -Is -q $queue -n$NCORES -P$PROJ -W24:00 "$args"
