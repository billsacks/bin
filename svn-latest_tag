#!/bin/bash

# Bill Sacks
# 10-4-12

# Get latest tag in a tag directory

# Get url of the tags directory following this precedence:
# (1) tags directory url, specified with -t
# (2) use url specified with -u, get tags directory via svn-get_root_urls
# (3) use url from svn-url, get tags directory via svn-get_root_urls

# ----------------------------------------------------------------------
# LOCAL FUNCTIONS DEFINED HERE
# ----------------------------------------------------------------------

function Usage {
    progname=`basename $0`
    echo "Usage: $progname [-h] [-q] [-r] [-t tags_url] [-u url]"
    echo ""
    echo "This script gets the latest tag in a tag directory"
    echo ""
    echo "If -t tags_url is given, then use that url for the tag directory;"
    echo "otherwise, if -u URL is given, then use that url,"
    echo "getting tags directory via svn-get_root_urls;"
    echo "otherwise use the URL of the current directory."
    echo ""
    echo "The following are optional arguments:"
    echo ""
    echo "[-h]: Print this help message and exit"
    echo ""
    echo "[-q]: Print less stuff ('quiet')"
    echo "      The default (without -q) is to also print a verbose listing of the directory of the latest tag"
    echo "      That verbose listing is the second line of output"
    echo ""
    echo "[-r]: If given, first line of output gives the revision on which the latest tag was based"
    echo "      Output format: tag_path from_revision"
    echo "      If not given, outputs only tag_path in first line of output"
    echo ""
    echo "[-t tags_url]: Use given url for tags directory"
    echo "               Must be of the form: .../trunk_tags"
    echo "               or: .../branch_tags/some_branch_tags"
    echo ""
    echo "[-u url]: Use given url to get tags directory"
    echo "          (Only used if -t tags_url is not given)"
    echo "          (If neither -t or -u are given, use URL of current directory)"
    echo ""
}

# ----------------------------------------------------------------------
# BEGIN MAIN SCRIPT
# ----------------------------------------------------------------------

# ----------------------------------------------------------------------
# Handle command-line arguments
# ----------------------------------------------------------------------

# define default values:
tags_url=""
url=""
quiet=0
print_revision=0

while getopts hrqt:u: opt; do
    case $opt in
	h) Usage; exit;;
	q) quiet=1;;
	r) print_revision=1;;
	t) tags_url=$OPTARG;;
	u) url=$OPTARG;;
	\?) Usage; exit 1
    esac
done

# shift off the arguments we read with getopts:
shift `expr $OPTIND - 1`

if [[ $# -ne 0 ]]; then
    Usage
    exit 1
fi

# ----------------------------------------------------------------------
# Error checking
# ----------------------------------------------------------------------

if [ -n "$tags_url" ]; then
    tags_url_base=`basename $tags_url`
    tags_url_dir=`dirname $tags_url`
    tags_url_dir_base=`basename $tags_url_dir`

    if [[ $tags_url_base != "trunk_tags" && $tags_url_dir_base != "branch_tags" ]]; then
	echo "when -t tags_url is given, it must be a url of a trunk tags or branch tags directory"
	exit 1
    fi
fi

# ----------------------------------------------------------------------
# Get url of tags directory
# ----------------------------------------------------------------------

# if tags_url is given, we can use that directly, otherwise we need to
# determine tags_url
if [ -z "$tags_url" ]; then
    
    # if url is given, we'll use that, otherwise we need to get it
    # from the url of the current directory
    if [ -z "$url" ]; then
	url=`svn-url`
	if [ $? -ne 0 ]; then
            # for non-zero return value, url holds the error string
	    echo $url
	    exit 1
	fi
    fi
    
    main_and_tags=`svn-get_root_urls -u $url`
    tags_url=`echo $main_and_tags | awk '{print $2}'`
fi

# ----------------------------------------------------------------------
# Get latest tag
# ----------------------------------------------------------------------

# This will give something like: 
# A /clm2/branch_tags/landice_diagnostics_tags/landice_diagnostics_14_non2dgrid18_clm4_0_26 (from /clm2/branches/landice_diagnostics:31302)
tagline=`svn log -v $tags_url 2>/dev/null | head -4 | tail -1`

# Determine url of latest tag
tagpath=`echo $tagline | awk '{print $2}'`
tag=`basename $tagpath`
latest_tag=$tags_url/$tag

# Determine revision on which this latest tag was based
# Remove everything to the left of the colon:
right_of_colon=${tagline#*:}
# Removing ending ')':
from_revision=${right_of_colon%)}

# ----------------------------------------------------------------------
# Print results
# ----------------------------------------------------------------------

if [ $print_revision -eq 1 ]; then
    echo $latest_tag $from_revision
else
    echo $latest_tag
fi

if [ $quiet -eq 0 ]; then
    svn ls -v --depth empty $latest_tag
fi
    