#!/usr/bin/perl

# Meant to take as input the output from a cs.status command.
# Prints important lines, and counts of ignored lines.

# Intended usage: cs.status.<whatever> | filter_cs_status

# Possible future extension: allow any number of command-line arguments. Each
# argument is a regular expression that is treated the same as the other
# 'ignore' regular expressions (i.e., so you don't need to pipe the output of
# this to, e.g., 'grep -v nlcomp' -- instead, you'd just add 'nlcomp' as an
# argument to this command).

use strict;
use warnings;
use Data::Dumper;

my %counts;

while (<>) {
   my $line = $_; 
   if ($line =~ /^PASS/) {
      $counts{'PASS'}++;
   }
   elsif ($line =~ /\.tputcomp\./) {
      $counts{'tputcomp'}++;
   }
   elsif ($line =~ /^COMMENT/) {
      $counts{'COMMENT'}++;
   }
   elsif ($line =~ /^BFAIL_NA/) {
      $counts{'BFAIL_NA'}++;
   }
   else {
      print $line;
   }
}

print "Ignored lines:\n";
print Dumper(\%counts);
